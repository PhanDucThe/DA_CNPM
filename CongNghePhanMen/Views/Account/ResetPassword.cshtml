@model CongNghePhanMen.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Đặt lại mật khẩu";
    Layout = "~/Views/Shared/_Layout.cshtml";

    <style>

        .card-body {
           
        }

        form {
            margin: 0 auto;
            width: 260px;
            height: 280px;
        }
    </style>
}







<div style="position:relative;left:10px;top:0px;">
    @if (ViewBag.Message != null)
    {
        <div class="alert alert-info mt-3">@ViewBag.Message</div>
    }
</div>


<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-5">
            <div class="card shadow-lg border-0">
                <div class="card-body p-3 m-auto">
                    <h3 class="text-center mb-4">Đặt lại mật khẩu</h3>





                    @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post))
                    {

                        @*<input type="hidden" name="token" value="@Request["token"]" />*@
                        @Html.HiddenFor(m => m.token)
                <div class="form-group mb-3 position-relative">
                         @Html.LabelFor(m => m.newPassword)
                    <div class="input-group">

                        @Html.PasswordFor(m => m.newPassword, new { @class = "form-control", placeholder = "Nhập mật khẩu mới", id = "newPassword" })
                        <button class="btn btn-outline-secondary toggle-password" type="button" data-target="#newPassword">
                            <i class="fa fa-eye"></i>
                        </button>
                        @Html.ValidationMessageFor(m => m.newPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-3 position-relative">
                    @Html.LabelFor(m => m.confirmPassword)
                    <div class="input-group" >

                        @Html.PasswordFor(m => m.confirmPassword, new { @class = "form-control", placeholder = "Xác nhận mật khẩu", id = "confirmPassword" })
                        <button class="btn btn-outline-secondary toggle-password" type="button" data-target="#confirmPassword">
                            <i class="fa fa-eye"></i>
                        </button>
                        
                        @*@Html.ValidationMessageFor(m => m.confirmPassword, "", new { @class = "text-danger" })*@
                    </div>
                </div>


                        <button type="submit" class="btn btn-success w-100">Đặt lại mật khẩu</button>
                    }



                </div>
            </div>
        </div>
    </div>
</div>




<script>

    document.querySelectorAll('.toggle-password').forEach(btn => {
        btn.addEventListener('click', function () {
            const targetSelector = this.getAttribute('data-target');
            const input = document.querySelector(targetSelector);
            const icon = this.querySelector('i');

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });
    });
</script>